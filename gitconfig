[alias]
	can-ff-merge = "!f() { \
		: git branch ; \
		[ -e "${1}" ] && echo "Missing branch name to merge" && exit 1; \
		branch=$1; \
		if [[ "$branch" == '-' ]]; \
		then \
			branch='@{-1}'; \
		fi; \
		git "merge-base --is-ancestor \
		$(git rev-parse --abbrev-ref HEAD) ${branch}" \
		&& echo 'Yes, this can ff-merge' && exit 0 \
		|| echo 'No, this can NOT ff-merge' && exit 1; \
	}; f"
	d-b = branch -d @{-1}
	dgone = !git fetch --prune && git for-each-ref --format '%(refname:short) %(upstream:track)' |  awk '$2 == \"[gone]\" {print $1}' | xargs -r git branch -D
	drb = !git push origin --delete $(git rev-parse --abbrev-ref HEAD)
	is-up-to-date-with = "!f() { \
		: git branch ; \
		[ -e "${1}" ] && echo "Missing branch name to compare" && exit 1; \
		branch=$1; \
		if [[ "$branch" == '-' ]]; \
		then \
			branch=$(git rev-parse --abbrev-ref @{-1}); \
		fi; \
		git "merge-base --is-ancestor \
		${branch} $(git rev-parse --abbrev-ref HEAD)" \
		&& echo "Yes, this branch is up to date with $branch" && exit 0 \
		|| echo "No, this branch is NOT up to date with $branch" && exit 1; \
	}; f"
	lg = log --color --graph --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'
	open-pr-github = "!f() { \
		: git branch ; \
		if [[ -z $1 ]]; \
		then \
			target=''; \
		else \
			target=\"$1...\"; \
		fi; \
		open \"$(git ls-remote --get-url $(git config --get branch.$(git rev-parse --abbrev-ref HEAD).remote) \
			| sed 's|git@github.com:\\(.*\\)$|https://github.com/\\1|' \
			| sed 's|\\.git$||'; \
		)/compare/$target$(\
		git config --get branch.$(git rev-parse --abbrev-ref HEAD).merge | cut -d '/' -f 3- \
		)?expand=1\"; \
	}; f"
	please = push --force-with-lease
	recover-rejected-commit = "!f() { git "commit -e --file=$(git rev-parse --git-dir)/COMMIT_EDITMSG"; }; f"
	rhu = reset --hard @{upstream}
	frhu = !git fetch && git reset --hard @{upstream}
	shnpfb = show --no-patch --format='%B'
	squashbackto = !git -c sequence.editor=\"vim --clean -c 'silent 2,\\$s/^pick/squash/|:wq' \" rebase --interactive --keep-base
	track-origin-same-branch-name = !git branch --set-upstream-to=origin/$(git rev-parse --abbrev-ref HEAD)
[branch]
	sort = -committerdate
[checkout]
	defaultRemote = origin
[commit]
	verbose = true
[push]
	autoSetupRemote = true
	default = current
[rebase]
	autosquash = true
[tag]
	sort = -version:refname
